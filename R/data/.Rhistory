L = -U
xxx = seq(L,U,length=40)
hist(reg.r$res,prob=TRUE,xlab="",ylab="Residuals",main="Restrited model",breaks=xxx)
xxx = seq(L,U,length=1000)
lines(xxx,dnorm(xxx,mean(reg.r$res),sqrt(var(reg.r$res))),col=2)
box()
plot(reg.r$fit,reg.r$res,xlab="Fitted",ylab="Residuals",ylim=c(L,U))
abline(h=0,col=2)
U = max(abs(reg.f$res))
L = -U
xxx = seq(L,U,length=40)
hist(reg.f$res,prob=TRUE,xlab="",ylab="Residuals",main="Full model",breaks=xxx)
xxx = seq(L,U,length=1000)
lines(xxx,dnorm(xxx,mean(reg.f$res),sqrt(var(reg.f$res))),col=2)
box()
plot(reg.f$fit,reg.f$res,xlab="Fitted",ylab="Residuals",ylim=c(L,U))
abline(h=0,col=2)
dev.off()
rm(list=ls())
rm(list=ls())
source('~/Documents/Metrics Project/Metrics.R')
##########################################################################################
#
# DADOS MUNICIPAIS BRASILEIROS (ipeadata.gov.br)
#
##########################################################################################
#
#  1. Estado
#  2. Codigo
#  3. Municipio
#  4. Renda domiciliar per capita - media do 1o quintil (R$ por mes)
#  5. Renda domiciliar per capita - media do 2o quintil (R$ por mes)
#  6. Renda domiciliar per capita - media do 3o quintil (R$ por mes)
#  7. Renda domiciliar per capita - media do 4o quintil (R$ por mes)
#  8. Renda domiciliar per capita - media do 5o quintil (R$ por mes)
#  9. Razao entre a renda dos 10% mais ricos e 40% mais pobres
# 10. Mulheres chefes de familia sem conjuge e com filhos menores de 15 anos (%)
# 11. Medicos residentes (por mil habitantes)
# 12. Enfermeiros residentes com curso superior (%)
# 13. Alfabetizados - pessoas 15 anos e mais (%)
# 14. Indice de Desenvolvimento Humano
# 15. Indice de Desenvolvimento Humano - renda
# 16. Indice de Desenvolvimento Humano - longevidade
# 17. Indice de Desenvolvimento Humano - educacao
# 18. Mortalidade ate cinco anos de idade (por mil nascidos vivos)
# 19. Probabilidade de sobrevivencia ate 40 anos (%)
# 20. Probabilidade de sobrevivencia ate 60 anos (%)
# 21. Taxa de fecundidade (%)
# 22. Pessoas 65 anos ou mais - morando sozinhas (%)
# 23. Pessoas 10 e 14 anos - mulheres com filhos (%)
# 24. Professores do fundamental residentes com curso superior (%)
# 25. Esperanca de vida ao nascer
# 26. Mortalidade infantil (por mil nascidos vivos)
# 27. Domicilios - com agua encanada - pessoas (%)
# 28. Domicilios - com servico de coleta de lixo - pessoas (%)
#
##########################################################################################
rm(list=ls())
nomes = c("Renda per capita - media do 2o quintil (LOG)",
"Renda per capita - media do 5o quintil (LOG)",
"Alfabetizados - 15 ou mais",
"Mortalidade ate 5 anos (por mil vivos)",
"Prob. sobrev. ate 40",
"Prob. sobrev. ate 60",
"Esperanca de vida ao nascer",
"Mortalidade infantil (por mil vivos)",
"Agua encanada (LOGIT)",
"Coleta de lixo (LOGIT)")
data = read.csv("dadosmunicipais-ipea.csv",header=TRUE)
n  = nrow(data)
attach(data)
reg = lm(idh~rendapc1+rendapc2+rendapc3+rendapc4+rendapc5+razao1040+mulherchefe+medico+enfermeiro+alfabetizado+mortal5+prob40+prob60+taxafecund+LXVoumais+maes10a14+professores+esperanca+mortal+agua+lixo)
plot(reg$fit,reg$res)
lrendapc2       = log(rendapc2)
lrendapc5       = log(rendapc5)
agua[agua==0]   = min(agua[agua>0])
agua[agua==100] = max(agua[agua<100])
lixo[lixo==0]   = min(lixo[lixo>0])
lixo[lixo==100] = max(lixo[lixo<100])
lagua           = log(agua/(100-agua))
llixo           = log(lixo/(100-lixo))
pdf(file="dadosmunicipais.pdf",width=12,height=6)
par(mfrow=c(2,5))
plot(lrendapc2,idh,xlab=nomes[1],ylab="IDH")
abline(lm(idh~lrendapc2),lwd=2,col=2)
plot(lrendapc5,idh,xlab=nomes[2],ylab="IDH")
abline(lm(idh~lrendapc5),lwd=2,col=2)
plot(alfabetizado,idh,xlab=nomes[3],ylab="IDH")
abline(lm(idh~alfabetizado),lwd=2,col=2)
plot(mortal5,idh,xlab=nomes[4],ylab="IDH")
abline(lm(idh~mortal5),lwd=2,col=2)
plot(prob40,idh,xlab=nomes[5],ylab="IDH")
abline(lm(idh~prob40),lwd=2,col=2)
plot(prob60,idh,xlab=nomes[6],ylab="IDH")
abline(lm(idh~prob60),lwd=2,col=2)
plot(esperanca,idh,xlab=nomes[7],ylab="IDH")
abline(lm(idh~esperanca),lwd=2,col=2)
plot(mortal,idh,xlab=nomes[8],ylab="IDH")
abline(lm(idh~mortal),lwd=2,col=2)
plot(lagua,idh,xlab=nomes[9],ylab="IDH")
abline(lm(idh~lagua),lwd=2,col=2)
plot(llixo,idh,xlab=nomes[10],ylab="IDH")
abline(lm(idh~llixo),lwd=2,col=2)
estados = sort(unique(data[,1]))
ne      = length(estados)
coefs   = array(0,c(ne,10,2))
par(mfrow=c(2,5))
for (i in 1:ne){
ii    = sigla==estados[i]
reg1  = lm(idh[ii]~lrendapc2[ii])
reg2  = lm(idh[ii]~lrendapc5[ii])
reg3  = lm(idh[ii]~alfabetizado[ii])
reg4  = lm(idh[ii]~mortal5[ii])
reg5  = lm(idh[ii]~prob40[ii])
reg6  = lm(idh[ii]~prob60[ii])
reg7  = lm(idh[ii]~esperanca[ii])
reg8  = lm(idh[ii]~mortal[ii])
reg9  = lm(idh[ii]~lagua[ii])
reg10 = lm(idh[ii]~llixo[ii])
plot(lrendapc2[ii],idh[ii],main=estados[i],xlab=nomes[1],ylab="IDH")
abline(reg1$coef,col=2)
plot(lrendapc5[ii],idh[ii],xlab=nomes[2],ylab="IDH")
abline(reg2$coef,col=2)
plot(alfabetizado[ii],idh[ii],xlab=nomes[3],ylab="IDH")
abline(reg3$coef,col=2)
plot(mortal5[ii],idh[ii],xlab=nomes[4],ylab="IDH")
abline(reg4$coef,col=2)
plot(prob40[ii],idh[ii],xlab=nomes[5],ylab="IDH")
abline(reg5$coef,col=2)
plot(prob60[ii],idh[ii],xlab=nomes[6],ylab="IDH")
abline(reg6$coef,col=2)
plot(esperanca[ii],idh[ii],xlab=nomes[7],ylab="IDH")
abline(reg7$coef,col=2)
plot(mortal[ii],idh[ii],xlab=nomes[8],ylab="IDH")
abline(reg8$coef,col=2)
plot(lagua[ii],idh[ii],xlab=nomes[9],ylab="IDH")
abline(reg9$coef,col=2)
plot(llixo[ii],idh[ii],xlab=nomes[10],ylab="IDH")
abline(reg10$coef,col=2)
coefs[i,1,] = reg1$coef
coefs[i,2,] = reg2$coef
coefs[i,3,] = reg3$coef
coefs[i,4,] = reg4$coef
coefs[i,5,] = reg5$coef
coefs[i,6,] = reg6$coef
coefs[i,7,] = reg7$coef
coefs[i,8,] = reg8$coef
coefs[i,9,] = reg9$coef
coefs[i,10,] = reg10$coef
}
# Comparing several models
X = cbind(lrendapc2,lrendapc5,alfabetizado,mortal5,prob40,prob60,esperanca,
mortal,lagua,llixo)
model = NULL
for (i1 in 0:1)
for (i2 in 0:1)
for (i3 in 0:1)
for (i4 in 0:1)
for (i5 in 0:1)
for (i6 in 0:1)
for (i7 in 0:1)
for (i8 in 0:1)
for (i9 in 0:1)
for (i10 in 0:1)
model = rbind(model,c(i1,i2,i3,i4,i5,i6,i7,i8,i9,i10))
model = model[2:1024,]
SST    = sum((idh-mean(idh))^2)
ind    = 1:10
nmodel = 1023
R2a    = rep(0,nmodel)
npar   = rep(0,nmodel)
for (i in 1:nmodel){
k      = sum(model[i,])
reg    = lm(idh~X[,ind[model[i,]==1]])
R2     = 1-sum(reg$res^2)/SST
R2a[i] = 1-(1-R2)*(n-1)/(n-k-1)
npar[i] = 1+k
}
topmodels = NULL
R2max     = NULL
for (i in 2:10){
model1 = model[npar==i,]
R2a1   = R2a[npar==i]
R2max  = c(R2max,max(R2a1))
topmodels = rbind(topmodels,model1[R2a1==max(R2a1),])
}
R2max  = c(R2max,R2a[nmodel])
topmodels = rbind(topmodels,model[nmodel,])
nomes1 = c("lrendapc2","lrendapc5","alfabet","mortal5",
"prob40","prob60","esperanca","mortal","lagua","llixo")
par(mfrow=c(1,1))
plot(npar,R2a,xlab="Numero de regressores (incluindo o intercepto)",ylab="R2 ajustado",
pch=16,ylim=c(min(R2a),1.05),axes=FALSE)
axis(2);box();axis(1,at=2:11)
for (i in 2:11)
text(i,1.02,round(100*R2max[i-1],3),col=4)
text(6.5,1.05,"R2a maximo",col=4)
abline(h=1,lty=2)
par(mfrow=c(1,1))
plot(c(1,11),c(0,13),axes=FALSE,col=0,xlab="",ylab="")
for (i in 1:10){
text(1:10,11-i,topmodels[i,])
text(11,11-i,round(R2max[i],4))
text(i,12,nomes1[i])
text(i,11,paste(round(100*mean(topmodels[,i]),1),"%",sep=""))
}
text(11,12,"R2a")
abline(h=12.5)
abline(h=11.5)
abline(h=10.5)
abline(h=0.5)
reg.r = lm(idh~lrendapc5+alfabetizado+prob60)
summary(reg.r)
reg.f = lm(idh~lrendapc2+lrendapc5+alfabetizado+mortal5+prob40+prob60+esperanca+
mortal+lagua+llixo)
summary(reg.f)
par(mfrow=c(2,2))
U = max(abs(reg.r$res))
L = -U
xxx = seq(L,U,length=40)
hist(reg.r$res,prob=TRUE,xlab="",ylab="Residuals",main="Restrited model",breaks=xxx)
xxx = seq(L,U,length=1000)
lines(xxx,dnorm(xxx,mean(reg.r$res),sqrt(var(reg.r$res))),col=2)
box()
plot(reg.r$fit,reg.r$res,xlab="Fitted",ylab="Residuals",ylim=c(L,U))
abline(h=0,col=2)
U = max(abs(reg.f$res))
L = -U
xxx = seq(L,U,length=40)
hist(reg.f$res,prob=TRUE,xlab="",ylab="Residuals",main="Full model",breaks=xxx)
xxx = seq(L,U,length=1000)
lines(xxx,dnorm(xxx,mean(reg.f$res),sqrt(var(reg.f$res))),col=2)
box()
plot(reg.f$fit,reg.f$res,xlab="Fitted",ylab="Residuals",ylim=c(L,U))
abline(h=0,col=2)
dev.off()
data = read.csv("dadosmunicipais-ipea.csv",header=TRUE)
n  = nrow(data)
attach(data)
reg = lm(idh~rendapc1+rendapc2+rendapc3+rendapc4+rendapc5+razao1040+mulherchefe+medico+enfermeiro+alfabetizado+mortal5+prob40+prob60+taxafecund+LXVoumais+maes10a14+professores+esperanca+mortal+agua+lixo)
plot(reg$fit,reg$res)
data = read.csv("dadosmunicipais-ipea.csv",header=TRUE)
n  = nrow(data)
attach(data)
nomes = c("Renda per capita - media do 2o quintil (LOG)",
"Renda per capita - media do 5o quintil (LOG)",
"Alfabetizados - 15 ou mais",
"Mortalidade ate 5 anos (por mil vivos)",
"Prob. sobrev. ate 40",
"Prob. sobrev. ate 60",
"Esperanca de vida ao nascer",
"Mortalidade infantil (por mil vivos)",
"Agua encanada (LOGIT)",
"Coleta de lixo (LOGIT)")
data = read.csv("dadosmunicipais-ipea.csv",header=TRUE)
n  = nrow(data)
attach(data)
data = read.csv("dadosmunicipais-ipea.csv",header=TRUE)
library(readr)
dataset <- read_csv(NULL)
View(dataset)
data = read.csv("dadosmunicipais-ipea.csv",header=TRUE)
n  = nrow(data)
attach(data)
library(readr)
dadosmunicipais_ipea <- read_csv("~/Documents/Metrics Project/dadosmunicipais-ipea.csv")
View(dadosmunicipais_ipea)
nomes = c("Renda per capita - media do 2o quintil (LOG)",
"Renda per capita - media do 5o quintil (LOG)",
"Alfabetizados - 15 ou mais",
"Mortalidade ate 5 anos (por mil vivos)",
"Prob. sobrev. ate 40",
"Prob. sobrev. ate 60",
"Esperanca de vida ao nascer",
"Mortalidade infantil (por mil vivos)",
"Agua encanada (LOGIT)",
"Coleta de lixo (LOGIT)")
reg = lm(idh~rendapc1+rendapc2+rendapc3+rendapc4+rendapc5+razao1040+mulherchefe+medico+enfermeiro+alfabetizado+mortal5+prob40+prob60+taxafecund+LXVoumais+maes10a14+professores+esperanca+mortal+agua+lixo)
plot(reg$fit,reg$res)
data = read.csv("dadosmunicipais-ipea.csv",header=TRUE)
n  = nrow(data)
attach(data)
library(readr)
dadosmunicipais_ipea <- read_csv("~/Documents/Metrics Project/dadosmunicipais-ipea.csv")
View(dadosmunicipais_ipea)
nomes = c("Renda per capita - media do 2o quintil (LOG)",
"Renda per capita - media do 5o quintil (LOG)",
"Alfabetizados - 15 ou mais",
"Mortalidade ate 5 anos (por mil vivos)",
"Prob. sobrev. ate 40",
"Prob. sobrev. ate 60",
"Esperanca de vida ao nascer",
"Mortalidade infantil (por mil vivos)",
"Agua encanada (LOGIT)",
"Coleta de lixo (LOGIT)")
View(dadosmunicipais_ipea)
data = read.csv("dadosmunicipais-ipea.csv",header=TRUE)
n  = nrow(data)
attach(data)
reg = lm(idh~rendapc1+rendapc2+rendapc3+rendapc4+rendapc5+razao1040+mulherchefe+medico+enfermeiro+alfabetizado+mortal5+prob40+prob60+taxafecund+LXVoumais+maes10a14+professores+esperanca+mortal+agua+lixo)
View(model)
View(model1)
View(topmodels)
reg = lm(idh~rendapc1+rendapc2+rendapc3+rendapc4+rendapc5+razao1040+mulherchefe+medico+enfermeiro+alfabetizado+mortal5+prob40+prob60+taxafecund+LXVoumais+maes10a14+professores+esperanca+mortal+agua+lixo)
View(dadosmunicipais_ipea)
reg = lm(idhrenda~rendapc1+rendapc2+rendapc3+rendapc4+rendapc5+razao1040+mulherchefe+medico+enfermeiro+alfabetizado+mortal5+prob40+prob60+taxafecund+LXVoumais+maes10a14+professores+esperanca+mortal+agua+lixo)
reg = lm(idh~rendapc1+rendapc2+rendapc3+rendapc4+rendapc5+razao1040+mulherchefe+medico+enfermeiro+alfabetizado+mortal5+prob40+prob60+taxafecund+LXVoumais+maes10a14+professores+esperanca+mortal+agua+lixo)
attach(data)
library(readr)
TT <- read_csv("~/Documents/14. R.A ECONOMICS_SCIENCES PO/2. Methodological Paper/7. FINAL FILES/1. TRUNCATION/MATLAB_DYNAMICS/TT.txt",
col_names = FALSE)
View(TT)
plot.ts(TT, main="Evolution of Taxes", ylab="Taxes")
TT_ar <- arima(TT , order = c(1, 0, 0))
TT_ar
sqrt(5.938e-07)
residuals <- residuals(TT_ar)
TT_fitted <- ts(TT) - residuals
x=ts(TT)
plot(x)
lag1.plot(x,1) # Plots x versus lag 1 of x.
acf(x, xlim=c(1,19)) # Plots the ACF of x for lags 1 to 19
xlag1=lag(x,-1) # Creates a lag 1 of x variable. See note 2
y=cbind(x,xlag1) # See note 3 below
ar1fit=lm(y[,1]~y[,2])#Does regression, stores results object named ar1fit
summary(ar1fit)
plot(ar1fit$fit,ar1fit$residuals)
acf(ar1fit$residuals, xlim=c(1,18)) # ACF of the residuals for lags 1 to 18
TT
ts.(TT)
ts(TT)
arima(TT, order = c(1,1,1))
arima(TT, order = c(2,0,0))
sqrt(5.912e-07)
exp(0.82)
exp(0.98)
exp(1.94***)
exp(1.94)
exp(1.38)
weight <-55
weight2 =55
weight <-6-
d
weight <- 60
1 & =\beta(F_{K}+1)
1 & =\beta(F_{K}+1)
weightlb <- 2.2 * weightkg
c(weightkg, weightlb
)
weightkg = 50
weightlb <- 2.2 * weightkg
c(weightkg, weightlb)
weightlb <- 2.2 * weightkg
c(weightkg, weightlb)
clear
clc
rm()
clear all
rm(list = ls())
weightlb <- 2.2 * weightkg
weightlb <- 2.2 * weightkg
weightlb <- 2.2 * weightkg
c(weightkg, weightlb)
weightkg <- 80
c(weightkg, weightlb)
weightlb <- 2.2 * weightkg
c(weightkg, weightlb)
install.packages('IRkernel')
Yes
install.packages('IRkernel')
IRkernel::installspec()
install.packages('IRkernel')
install.packages("IRkernel")
# R script
w +1
weight = 5
weight * 2
setwd("/Users/diegorodrigues/Desktop/IP2022/IP2022/R/data")
setwd("/Users/diegorodrigues/Desktop/IP2022/IP2022/R")
d = read.csv(file = "inflammation-01.csv", header = FALSE)
setwd("/Users/diegorodrigues/Desktop/IP2022/IP2022/R/data")
d = read.csv(file = "inflammation-01.csv", header = FALSE)
View(d)
head(d, n = 3L)
d[1,1]                      # first row, first column
d[c(1, 3, 5), c(10, 20)]    # rows (1, 3 and 5), columns (10 and 20)
d[1:5, 1:3]                 # row from 1 to 5 and column 1 to 3
d[1, 1:5]                  # columns from 1 to 5 and row 1
d[, 1]                      # all rows from col 1
d[1, ]                      # all column from row 1
min(d[, 1])               # the min inflammation on day 1
d[5, ]
max(d[5, ])               # the max inflammation for patient 5
max(d[, c(4, 8, 12)])     # the max inflammation on days 4, 8 and 12
min(d[c(3, 6), c(1,2,3,4,5)])      #  the min inflammation for patients 3 and 6 from day 1 to 5
mean(d[2, 4])
rowMeans(d[c(2, 4, 10),]) # the mean inflammation for patients 2, 4 and 10
summary(d[, 1:5])
apply(d[1:10,], 1, mean)
rowMeans(d[1:10,])
plot(apply(d, 2, max), xlab = "day", ylab = "maximum", main = "maximum inflammation by day")
boxplot(d, main = "Summary")
plot(apply(d, 2, max), xlab = "day", ylab = "maximum", main = "maximum inflammation by day")
boxplot(d, main = "Summary")
min_inf = apply(d,2,min)
plot(min_inf, xlab = "day", ylab = "min", main = "min inflammation by day")
fk <- function(temp_F) {
temp_K <- ((temp_F - 32) * (5 / 9)) + 273.15
return(temp_K)
}
fk(32)
kc <- function(temp_K) {
temp_C <- temp_K - 273.15
return(temp_C)
}
kc(333)
fc <- function(temp_F) {
temp_K <- fk(temp_F)
temp_C <- kc(temp_K)
val = c(temp_K, temp_C)
return(val)
}
fc(32)
kc(fk(32))
sum <- function(a,b,c =0,d = 0) {
result = a + b
result2 = c + d
return(c(result, result2))
}
m(5,10, 3, 4)
sum(5,10, 3, 4)
vp = c("***")
vp
vc = c("Hello", "World")
vc
fence = function(A,B){
C = c(A,B,A)
return(C)
}
newvec2 = fence(vc,vp)
newvec2
fence(vp,vc)
newvec2 = fence(vc,vp)
newvec2
newvec2[4]
newvec2[length(newvec2)]
length(newvec2)
outside <- function(A){
first = A[1]
last = A[length(A)]
C = c(first,last)
return(C)
}
outside(newvec)
outside <- function(A){
first = A[1]
last = A[length(A)]
C = c(first,last)
return(C)
}
newvec
outside(newvec2)
newvec2
fence <- function(original, wrapper) {
o <- c(wrapper, original, wrapper)
return(o)
}
output = fence(original = vc, wrapper = vp)
output
output[3]
length(output)
analyze <- function(filename) {
# Plots the average, min, and max inflammation over time.
# Input is character string of a csv file.
d <- read.csv(file = filename, header = FALSE)
avg_i <- apply(d, 2, mean)
plot(avg_i)
max_i <- apply(d, 2, max)
plot(max_i)
min_i <- apply(d, 2, min)
plot(min_i)
}
path = "/Users/diegorodrigues/Desktop/IP2022/IP2022/R/data/inflammation-01.csv"
analyze(path)
analyze(path)
analyze(path)
analyze <- function(filename) {
# Plots the average, min, and max inflammation over time.
# Input is character string of a csv file.
d <- read.csv(file = filename, header = FALSE)
avg_i <- apply(d, 2, mean)
plot(avg_i)
max_i <- apply(d, 2, max)
#plot(max_i)
min_i <- apply(d, 2, min)
# plot(min_i)
}
path = "/Users/diegorodrigues/Desktop/IP2022/IP2022/R/data/inflammation-01.csv"
analyze(path)
analyze <- function(filename) {
# Plots the average, min, and max inflammation over time.
# Input is character string of a csv file.
d <- read.csv(file = filename, header = FALSE)
avg_i <- apply(d, 2, mean)
plot(avg_i)
max_i <- apply(d, 2, max)
plot(max_i)
min_i <- apply(d, 2, min)
plot(min_i)
}
path = "/Users/diegorodrigues/Desktop/IP2022/IP2022/R/data/inflammation-01.csv"
analyze(path)
